{"ast":null,"code":"import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport api from '../../../services/api';\nimport history from '../../../services/history';\nimport { deleteSuccess } from './actions';\nexport function* updateRecipient({\n  id,\n  name,\n  street,\n  number,\n  complement,\n  city,\n  state,\n  zip\n}) {\n  try {\n    yield call(api.put, `recipient/${id}`, {\n      name,\n      street,\n      number,\n      complement,\n      state,\n      city,\n      zip\n    });\n    toast.success('Destinatário atualizado com sucesso!');\n    history.push('/destinatarios');\n  } catch (error) {\n    toast.error('Falha na atualização de destinatário, verifique os campos novamente.');\n  }\n}\nexport function* deleteRecipient({\n  id\n}) {\n  try {\n    yield call(api.delete, `recipient/${id}`, {\n      id\n    });\n    console.tron.log('chegou', id);\n    yield put(deleteSuccess({\n      id\n    }));\n    toast.success('Destinatário deletado com sucesso!');\n    history.push('/destinatarios');\n  } catch (error) {\n    toast.error('Falha ao deletar destinatário.');\n  }\n}\nexport function* addRecipient({\n  payload\n}) {\n  try {\n    const {\n      name,\n      street,\n      number,\n      complement,\n      city,\n      state,\n      zip\n    } = payload;\n    yield call(api.post, `recipient`, {\n      name,\n      street,\n      number,\n      complement,\n      city,\n      state,\n      zip\n    });\n    toast.success('Destinatário criado com sucesso!');\n    history.push('/destinatarios');\n  } catch (error) {\n    toast.error('Falha na criação de destinatário, verifique os campos novamente.');\n  }\n}\nexport default all([takeLatest('@recipient/UPDATE_REQUEST', updateRecipient), takeLatest('@recipient/DELETE_REQUEST', deleteRecipient), takeLatest('@recipient/ADD_REQUEST', addRecipient)]);","map":{"version":3,"sources":["/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/store/modules/recipient/sagas.js"],"names":["all","takeLatest","call","put","toast","api","history","deleteSuccess","updateRecipient","id","name","street","number","complement","city","state","zip","success","push","error","deleteRecipient","delete","console","tron","log","addRecipient","payload","post"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,aAAT,QAA8B,WAA9B;AAEA,OAAO,UAAUC,eAAV,CAA0B;AAC/BC,EAAAA,EAD+B;AAE/BC,EAAAA,IAF+B;AAG/BC,EAAAA,MAH+B;AAI/BC,EAAAA,MAJ+B;AAK/BC,EAAAA,UAL+B;AAM/BC,EAAAA,IAN+B;AAO/BC,EAAAA,KAP+B;AAQ/BC,EAAAA;AAR+B,CAA1B,EASJ;AACD,MAAI;AACF,UAAMd,IAAI,CAACG,GAAG,CAACF,GAAL,EAAW,aAAYM,EAAG,EAA1B,EAA6B;AACrCC,MAAAA,IADqC;AAErCC,MAAAA,MAFqC;AAGrCC,MAAAA,MAHqC;AAIrCC,MAAAA,UAJqC;AAKrCE,MAAAA,KALqC;AAMrCD,MAAAA,IANqC;AAOrCE,MAAAA;AAPqC,KAA7B,CAAV;AAUAZ,IAAAA,KAAK,CAACa,OAAN,CAAc,sCAAd;AAEAX,IAAAA,OAAO,CAACY,IAAR,CAAa,gBAAb;AACD,GAdD,CAcE,OAAOC,KAAP,EAAc;AACdf,IAAAA,KAAK,CAACe,KAAN,CACE,sEADF;AAGD;AACF;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEX,EAAAA;AAAF,CAA1B,EAAkC;AACvC,MAAI;AACF,UAAMP,IAAI,CAACG,GAAG,CAACgB,MAAL,EAAc,aAAYZ,EAAG,EAA7B,EAAgC;AAAEA,MAAAA;AAAF,KAAhC,CAAV;AAEAa,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,QAAjB,EAA2Bf,EAA3B;AACA,UAAMN,GAAG,CAACI,aAAa,CAAC;AAAEE,MAAAA;AAAF,KAAD,CAAd,CAAT;AACAL,IAAAA,KAAK,CAACa,OAAN,CAAc,oCAAd;AAEAX,IAAAA,OAAO,CAACY,IAAR,CAAa,gBAAb;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACdf,IAAAA,KAAK,CAACe,KAAN,CAAY,gCAAZ;AACD;AACF;AAED,OAAO,UAAUM,YAAV,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAoC;AACzC,MAAI;AACF,UAAM;AAAEhB,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA,MAAhB;AAAwBC,MAAAA,UAAxB;AAAoCC,MAAAA,IAApC;AAA0CC,MAAAA,KAA1C;AAAiDC,MAAAA;AAAjD,QAAyDU,OAA/D;AAEA,UAAMxB,IAAI,CAACG,GAAG,CAACsB,IAAL,EAAY,WAAZ,EAAwB;AAChCjB,MAAAA,IADgC;AAEhCC,MAAAA,MAFgC;AAGhCC,MAAAA,MAHgC;AAIhCC,MAAAA,UAJgC;AAKhCC,MAAAA,IALgC;AAMhCC,MAAAA,KANgC;AAOhCC,MAAAA;AAPgC,KAAxB,CAAV;AAUAZ,IAAAA,KAAK,CAACa,OAAN,CAAc,kCAAd;AAEAX,IAAAA,OAAO,CAACY,IAAR,CAAa,gBAAb;AACD,GAhBD,CAgBE,OAAOC,KAAP,EAAc;AACdf,IAAAA,KAAK,CAACe,KAAN,CACE,kEADF;AAGD;AACF;AAED,eAAenB,GAAG,CAAC,CACjBC,UAAU,CAAC,2BAAD,EAA8BO,eAA9B,CADO,EAEjBP,UAAU,CAAC,2BAAD,EAA8BmB,eAA9B,CAFO,EAGjBnB,UAAU,CAAC,wBAAD,EAA2BwB,YAA3B,CAHO,CAAD,CAAlB","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport api from '../../../services/api';\nimport history from '../../../services/history';\nimport { deleteSuccess } from './actions';\n\nexport function* updateRecipient({\n  id,\n  name,\n  street,\n  number,\n  complement,\n  city,\n  state,\n  zip,\n}) {\n  try {\n    yield call(api.put, `recipient/${id}`, {\n      name,\n      street,\n      number,\n      complement,\n      state,\n      city,\n      zip,\n    });\n\n    toast.success('Destinatário atualizado com sucesso!');\n\n    history.push('/destinatarios');\n  } catch (error) {\n    toast.error(\n      'Falha na atualização de destinatário, verifique os campos novamente.'\n    );\n  }\n}\n\nexport function* deleteRecipient({ id }) {\n  try {\n    yield call(api.delete, `recipient/${id}`, { id });\n\n    console.tron.log('chegou', id);\n    yield put(deleteSuccess({ id }));\n    toast.success('Destinatário deletado com sucesso!');\n\n    history.push('/destinatarios');\n  } catch (error) {\n    toast.error('Falha ao deletar destinatário.');\n  }\n}\n\nexport function* addRecipient({ payload }) {\n  try {\n    const { name, street, number, complement, city, state, zip } = payload;\n\n    yield call(api.post, `recipient`, {\n      name,\n      street,\n      number,\n      complement,\n      city,\n      state,\n      zip,\n    });\n\n    toast.success('Destinatário criado com sucesso!');\n\n    history.push('/destinatarios');\n  } catch (error) {\n    toast.error(\n      'Falha na criação de destinatário, verifique os campos novamente.'\n    );\n  }\n}\n\nexport default all([\n  takeLatest('@recipient/UPDATE_REQUEST', updateRecipient),\n  takeLatest('@recipient/DELETE_REQUEST', deleteRecipient),\n  takeLatest('@recipient/ADD_REQUEST', addRecipient),\n]);\n"]},"metadata":{},"sourceType":"module"}