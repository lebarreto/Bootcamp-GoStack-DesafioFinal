{"ast":null,"code":"var _jsxFileName = \"/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/routes/Route.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AuthLayout from '../pages/_layouts/auth';\nimport DefaultLayout from '../pages/_layouts/default';\nimport '../config/ReactotronConfig';\nimport { store } from '../store';\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const {\n    signed\n  } = store.getState().auth;\n\n  if (!signed && isPrivate) {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }\n\n  if (signed && !isPrivate) {\n    return React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }\n\n  const Layout = signed ? DefaultLayout : AuthLayout;\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n}\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nRouteWrapper.defaultProps = {\n  isPrivate: false\n};","map":{"version":3,"sources":["/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/routes/Route.js"],"names":["React","Route","Redirect","PropTypes","AuthLayout","DefaultLayout","store","RouteWrapper","component","Component","isPrivate","rest","signed","getState","auth","Layout","props","propTypes","bool","oneOfType","element","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAO,4BAAP;AACA,SAASC,KAAT,QAAsB,UAAtB;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,SAAS,EAAEC,SADwB;AAEnCC,EAAAA,SAFmC;AAGnC,KAAGC;AAHgC,CAAtB,EAIZ;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAaN,KAAK,CAACO,QAAN,GAAiBC,IAApC;;AAEA,MAAI,CAACF,MAAD,IAAWF,SAAf,EAA0B;AACxB,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIE,MAAM,IAAI,CAACF,SAAf,EAA0B;AACxB,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,QAAMK,MAAM,GAAGH,MAAM,GAAGP,aAAH,GAAmBD,UAAxC;AAEA,SACE,oBAAC,KAAD,oBACMO,IADN;AAEE,IAAA,MAAM,EAAEK,KAAK,IACX,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAUD;AAEDT,YAAY,CAACU,SAAb,GAAyB;AACvBP,EAAAA,SAAS,EAAEP,SAAS,CAACe,IADE;AAEvBV,EAAAA,SAAS,EAAEL,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACiB,OAAX,EAAoBjB,SAAS,CAACkB,IAA9B,CAApB,EACRC;AAHoB,CAAzB;AAMAf,YAAY,CAACgB,YAAb,GAA4B;AAC1Bb,EAAAA,SAAS,EAAE;AADe,CAA5B","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport AuthLayout from '../pages/_layouts/auth';\nimport DefaultLayout from '../pages/_layouts/default';\nimport '../config/ReactotronConfig';\nimport { store } from '../store';\n\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const { signed } = store.getState().auth;\n\n  if (!signed && isPrivate) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (signed && !isPrivate) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  const Layout = signed ? DefaultLayout : AuthLayout;\n\n  return (\n    <Route\n      {...rest}\n      render={props => (\n        <Layout>\n          <Component {...props} />\n        </Layout>\n      )}\n    />\n  );\n}\n\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n    .isRequired,\n};\n\nRouteWrapper.defaultProps = {\n  isPrivate: false,\n};\n"]},"metadata":{},"sourceType":"module"}