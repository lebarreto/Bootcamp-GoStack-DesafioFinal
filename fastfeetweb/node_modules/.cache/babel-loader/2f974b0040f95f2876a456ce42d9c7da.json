{"ast":null,"code":"import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { signInSuccess, signFailure } from './actions';\nimport api from '../../../services/api';\nimport history from '../../../services/history';\nexport function* signIn({\n  payload\n}) {\n  try {\n    const {\n      email,\n      password\n    } = payload;\n    const response = yield call(api.post, 'session', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    api.defaults.headers['Authorization'] = `Bearer ${token}`;\n    yield put(signInSuccess(token, user));\n    history.push('/encomendas');\n  } catch (error) {\n    toast.error('Falha de autenticação, verifique os seus dados.');\n    yield put(signFailure());\n  }\n}\nexport function setToken({\n  payload\n}) {\n  if (!payload) {\n    return;\n  }\n\n  const {\n    token\n  } = payload.auth;\n\n  if (token) {\n    api.defaults.headers['Authorization'] = `Bearer ${token}`;\n  }\n}\nexport default all([takeLatest('persist/REHYDRATE', setToken), takeLatest('@auth/SIGN_IN_REQUEST', signIn)]);","map":{"version":3,"sources":["/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/store/modules/auth/sagas.js"],"names":["all","takeLatest","call","put","toast","signInSuccess","signFailure","api","history","signIn","payload","email","password","response","post","token","user","data","defaults","headers","push","error","setToken","auth"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,WAA3C;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAO,UAAUC,MAAV,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AACnC,MAAI;AACF,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBF,OAA5B;AAEA,UAAMG,QAAQ,GAAG,MAAMX,IAAI,CAACK,GAAG,CAACO,IAAL,EAAW,SAAX,EAAsB;AAC/CH,MAAAA,KAD+C;AAE/CC,MAAAA;AAF+C,KAAtB,CAA3B;AAKA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBH,QAAQ,CAACI,IAAjC;AACAV,IAAAA,GAAG,CAACW,QAAJ,CAAaC,OAAb,CAAqB,eAArB,IAAyC,UAASJ,KAAM,EAAxD;AAEA,UAAMZ,GAAG,CAACE,aAAa,CAACU,KAAD,EAAQC,IAAR,CAAd,CAAT;AAEAR,IAAAA,OAAO,CAACY,IAAR,CAAa,aAAb;AACD,GAdD,CAcE,OAAOC,KAAP,EAAc;AACdjB,IAAAA,KAAK,CAACiB,KAAN,CAAY,iDAAZ;AACA,UAAMlB,GAAG,CAACG,WAAW,EAAZ,CAAT;AACD;AACF;AAED,OAAO,SAASgB,QAAT,CAAkB;AAAEZ,EAAAA;AAAF,CAAlB,EAA+B;AACpC,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,QAAM;AAAEK,IAAAA;AAAF,MAAYL,OAAO,CAACa,IAA1B;;AACA,MAAIR,KAAJ,EAAW;AACTR,IAAAA,GAAG,CAACW,QAAJ,CAAaC,OAAb,CAAqB,eAArB,IAAyC,UAASJ,KAAM,EAAxD;AACD;AACF;AAED,eAAef,GAAG,CAAC,CACjBC,UAAU,CAAC,mBAAD,EAAsBqB,QAAtB,CADO,EAEjBrB,UAAU,CAAC,uBAAD,EAA0BQ,MAA1B,CAFO,CAAD,CAAlB","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport { signInSuccess, signFailure } from './actions';\nimport api from '../../../services/api';\nimport history from '../../../services/history';\n\nexport function* signIn({ payload }) {\n  try {\n    const { email, password } = payload;\n\n    const response = yield call(api.post, 'session', {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n    api.defaults.headers['Authorization'] = `Bearer ${token}`;\n\n    yield put(signInSuccess(token, user));\n\n    history.push('/encomendas');\n  } catch (error) {\n    toast.error('Falha de autenticação, verifique os seus dados.');\n    yield put(signFailure());\n  }\n}\n\nexport function setToken({ payload }) {\n  if (!payload) {\n    return;\n  }\n\n  const { token } = payload.auth;\n  if (token) {\n    api.defaults.headers['Authorization'] = `Bearer ${token}`;\n  }\n}\n\nexport default all([\n  takeLatest('persist/REHYDRATE', setToken),\n  takeLatest('@auth/SIGN_IN_REQUEST', signIn),\n]);\n"]},"metadata":{},"sourceType":"module"}