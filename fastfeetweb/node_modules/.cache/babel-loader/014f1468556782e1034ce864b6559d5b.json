{"ast":null,"code":"var _jsxFileName = \"/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/EdicaoEncomendas/index.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdCheck, MdKeyboardArrowLeft } from 'react-icons/md';\nimport { Container, EditOrder, FormOrder } from './styles';\nimport HeaderPages from '../../components/HeaderPages';\nimport history from '../../services/history';\nimport IconButton from '../../components/IconButton';\nimport ButtonBack from '../../components/ButtonBack';\nimport SelectAsync from '../../components/SelectAsync';\nimport api from '../../services/api';\nexport default function EdicaoEncomendas({\n  match\n}) {\n  const {\n    id\n  } = match.params;\n  const formRef = useRef(null);\n  const [recipients, setRecipients] = useState([]);\n  console.tron.log(id);\n\n  async function loadRecipi() {\n    const response = await api.get('/recipient');\n    response.data.map(recipient => ({\n      value: recipient.id,\n      label: recipient.name\n    }));\n    setRecipients(response.data);\n    console.tron.log(response.data);\n  }\n\n  useEffect(() => {\n    async function loadInitialData(id) {\n      if (id) {\n        const response = await api.get(`orders/${id}`);\n        formRef.current.setData(response.data);\n        formRef.current.setFieldValue('recipient_id', {\n          value: response.data.recipient.id,\n          label: response.data.recipient.name\n        });\n        formRef.current.setFieldValue('delivaryman_id', {\n          value: response.data.delivery.id,\n          label: response.data.delivery.name\n        });\n      }\n    }\n\n    loadInitialData(id);\n    loadRecipi();\n  }, [id]);\n\n  async function loadRecipients2(inputValue, callback) {\n    const response = await api.get('/recipient', {\n      params: {\n        q: inputValue\n      }\n    });\n    const data = response.data.map(recipients => ({\n      value: recipients.id,\n      label: recipients.name\n    }));\n    callback(data);\n  }\n\n  async function loadDeliveries(inputValue, callback) {\n    const response = await api.get('/deliveries/', {\n      params: {\n        q: inputValue\n      }\n    });\n    const data = response.data.map(delivery => ({\n      value: delivery.id,\n      label: delivery.name\n    }));\n    callback(data);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(EditOrder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(HeaderPages, {\n    title: \"Edi\\xE7\\xE3o de Encomendas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(ButtonBack, {\n    Icon: MdKeyboardArrowLeft,\n    title: \"VOLTAR\",\n    type: \"button\",\n    action: history.goBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    Icon: MdCheck,\n    title: \"SALVAR\",\n    type: \"button\",\n    action: () => history.push('/encomendas/'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(FormOrder, {\n    ref: formRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(SelectAsync, {\n    type: \"text\",\n    label: \"Destinat\\xE1rio\",\n    name: \"recipient_id\",\n    placeholder: \"Destinat\\xE1rios\",\n    loadOptions: loadRecipi,\n    noOptionsMessage: () => 'Nenhum destinatÃ¡rio encontrado',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(SelectAsync, {\n    type: \"text\",\n    label: \"Entregador\",\n    name: \"delivaryman_id\",\n    placeholder: \"Entregadores\",\n    noOptionsMessage: () => 'Nenhum entregador encontrado',\n    loadOptions: loadDeliveries,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))));\n}\nEdicaoEncomendas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/EdicaoEncomendas/index.js"],"names":["React","useEffect","useRef","useState","PropTypes","MdCheck","MdKeyboardArrowLeft","Container","EditOrder","FormOrder","HeaderPages","history","IconButton","ButtonBack","SelectAsync","api","EdicaoEncomendas","match","id","params","formRef","recipients","setRecipients","console","tron","log","loadRecipi","response","get","data","map","recipient","value","label","name","loadInitialData","current","setData","setFieldValue","delivery","loadRecipients2","inputValue","callback","q","loadDeliveries","goBack","push","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdCheck, MdKeyboardArrowLeft } from 'react-icons/md';\n\nimport { Container, EditOrder, FormOrder } from './styles';\nimport HeaderPages from '../../components/HeaderPages';\nimport history from '../../services/history';\nimport IconButton from '../../components/IconButton';\nimport ButtonBack from '../../components/ButtonBack';\nimport SelectAsync from '../../components/SelectAsync';\nimport api from '../../services/api';\n\nexport default function EdicaoEncomendas({ match }) {\n  const { id } = match.params;\n  const formRef = useRef(null);\n  const [recipients, setRecipients] = useState([]);\n\n  console.tron.log(id);\n\n  async function loadRecipi() {\n    const response = await api.get('/recipient');\n\n    response.data.map(recipient => ({\n      value: recipient.id,\n      label: recipient.name,\n    }));\n\n    setRecipients(response.data);\n\n    console.tron.log(response.data);\n  }\n\n  useEffect(() => {\n    async function loadInitialData(id) {\n      if (id) {\n        const response = await api.get(`orders/${id}`);\n\n        formRef.current.setData(response.data);\n        formRef.current.setFieldValue('recipient_id', {\n          value: response.data.recipient.id,\n          label: response.data.recipient.name,\n        });\n        formRef.current.setFieldValue('delivaryman_id', {\n          value: response.data.delivery.id,\n          label: response.data.delivery.name,\n        });\n      }\n    }\n\n    loadInitialData(id);\n    loadRecipi();\n  }, [id]);\n\n  async function loadRecipients2(inputValue, callback) {\n    const response = await api.get('/recipient', {\n      params: {\n        q: inputValue,\n      },\n    });\n\n    const data = response.data.map(recipients => ({\n      value: recipients.id,\n      label: recipients.name,\n    }));\n\n    callback(data);\n  }\n\n  async function loadDeliveries(inputValue, callback) {\n    const response = await api.get('/deliveries/', {\n      params: {\n        q: inputValue,\n      },\n    });\n\n    const data = response.data.map(delivery => ({\n      value: delivery.id,\n      label: delivery.name,\n    }));\n\n    callback(data);\n  }\n\n  return (\n    <Container>\n      <EditOrder>\n        <HeaderPages title=\"EdiÃ§Ã£o de Encomendas\">\n          <ButtonBack\n            Icon={MdKeyboardArrowLeft}\n            title=\"VOLTAR\"\n            type=\"button\"\n            action={history.goBack}\n          />\n          <IconButton\n            Icon={MdCheck}\n            title=\"SALVAR\"\n            type=\"button\"\n            action={() => history.push('/encomendas/')}\n          />\n        </HeaderPages>\n        <FormOrder ref={formRef}>\n          <SelectAsync\n            type=\"text\"\n            label=\"DestinatÃ¡rio\"\n            name=\"recipient_id\"\n            placeholder=\"DestinatÃ¡rios\"\n            loadOptions={loadRecipi}\n            noOptionsMessage={() => 'Nenhum destinatÃ¡rio encontrado'}\n          />\n          <SelectAsync\n            type=\"text\"\n            label=\"Entregador\"\n            name=\"delivaryman_id\"\n            placeholder=\"Entregadores\"\n            noOptionsMessage={() => 'Nenhum entregador encontrado'}\n            loadOptions={loadDeliveries}\n          />\n        </FormOrder>\n      </EditOrder>\n    </Container>\n  );\n}\n\nEdicaoEncomendas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}