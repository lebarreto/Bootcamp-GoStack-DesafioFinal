{"ast":null,"code":"var _jsxFileName = \"/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/Encomendas/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { parseISO, format } from 'date-fns';\nimport { Container, OrderContent, Table } from './styles';\nimport SearchInput from '../../components/Search';\nimport ButtonAdd from '../../components/ButtonAdd';\nimport HeaderList from '../../components/HeaderList';\nimport api from '../../services/api';\nimport history from '../../services/history';\nimport EncomendasTabela from './EncomendasTabela';\nexport default function Encomendas() {\n  const [orders, setOrders] = useState([]);\n  const [page, setPage] = useState(1);\n\n  function formatDate(data) {\n    return data.map(order => ({ ...order,\n      start_dateFormated: order.start_date ? format(parseISO(order.start_date), 'dd/MM/yyyy') : null,\n      end_dateFormated: order.end_date ? format(parseISO(order.end_date), 'dd/MM/yyyy') : null,\n      canceled_dateFormated: order.canceled_at ? format(parseISO(order.canceled_at), 'dd/MM/yyyy') : null\n    }));\n  }\n\n  async function loadOrders() {\n    const response = await api.get('orders', {\n      params: page\n    });\n    const data = formatDate(response.data);\n    setOrders(data);\n  }\n\n  useEffect(() => {\n    loadOrders(); // eslint-disable-next-line\n  }, [page]);\n\n  async function handleSearch(e) {\n    const response = await api.get('orders', {\n      params: {\n        q: e.target.value\n      }\n    });\n    const data = formatDate(response.data);\n    setOrders(data);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(OrderContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(HeaderList, {\n    title: \"Gerenciando Encomendas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(SearchInput, {\n    type: \"text\",\n    placeholder: \"Buscar por encomendas\",\n    onChange: handleSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(ButtonAdd, {\n    Icon: MdAdd,\n    title: \"CADASTRAR\",\n    type: \"button\",\n    action: () => history.push('/encomendas/'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"ID\"), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Produto\"), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Destinat\\xE1rio\"), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Entregador\"), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Cidade\"), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Estado\"), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Status\"), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"A\\xE7\\xF5es\"))), orders.map(order => React.createElement(EncomendasTabela, {\n    key: order.id,\n    data: order,\n    updateOrder: loadOrders,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/Encomendas/index.js"],"names":["React","useState","useEffect","parseISO","format","Container","OrderContent","Table","SearchInput","ButtonAdd","HeaderList","api","history","EncomendasTabela","Encomendas","orders","setOrders","page","setPage","formatDate","data","map","order","start_dateFormated","start_date","end_dateFormated","end_date","canceled_dateFormated","canceled_at","loadOrders","response","get","params","handleSearch","e","q","target","value","MdAdd","push","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { parseISO, format } from 'date-fns';\n\nimport { Container, OrderContent, Table } from './styles';\nimport SearchInput from '../../components/Search';\nimport ButtonAdd from '../../components/ButtonAdd';\nimport HeaderList from '../../components/HeaderList';\nimport api from '../../services/api';\nimport history from '../../services/history';\nimport EncomendasTabela from './EncomendasTabela';\n\nexport default function Encomendas() {\n  const [orders, setOrders] = useState([]);\n  const [page, setPage] = useState(1);\n\n  function formatDate(data) {\n    return data.map(order => ({\n      ...order,\n      start_dateFormated: order.start_date\n        ? format(parseISO(order.start_date), 'dd/MM/yyyy')\n        : null,\n      end_dateFormated: order.end_date\n        ? format(parseISO(order.end_date), 'dd/MM/yyyy')\n        : null,\n      canceled_dateFormated: order.canceled_at\n        ? format(parseISO(order.canceled_at), 'dd/MM/yyyy')\n        : null,\n    }));\n  }\n\n  async function loadOrders() {\n    const response = await api.get('orders', {\n      params: page,\n    });\n\n    const data = formatDate(response.data);\n    setOrders(data);\n  }\n\n  useEffect(() => {\n    loadOrders(); // eslint-disable-next-line\n  }, [page]);\n\n  async function handleSearch(e) {\n    const response = await api.get('orders', {\n      params: {\n        q: e.target.value,\n      },\n    });\n\n    const data = formatDate(response.data);\n    setOrders(data);\n  }\n\n  return (\n    <Container>\n      <OrderContent>\n        <HeaderList title=\"Gerenciando Encomendas\">\n          <SearchInput\n            type=\"text\"\n            placeholder=\"Buscar por encomendas\"\n            onChange={handleSearch}\n          />\n          <ButtonAdd\n            Icon={MdAdd}\n            title=\"CADASTRAR\"\n            type=\"button\"\n            action={() => history.push('/encomendas/')}\n          />\n        </HeaderList>\n\n        <Table>\n          <section>\n            <strong>ID</strong>\n            <strong>Produto</strong>\n            <strong>Destinatário</strong>\n            <strong>Entregador</strong>\n            <strong>Cidade</strong>\n            <strong>Estado</strong>\n            <strong>Status</strong>\n            <strong>Ações</strong>\n          </section>\n        </Table>\n        {orders.map(order => (\n          <EncomendasTabela\n            key={order.id}\n            data={order}\n            updateOrder={loadOrders}\n          />\n        ))}\n      </OrderContent>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}