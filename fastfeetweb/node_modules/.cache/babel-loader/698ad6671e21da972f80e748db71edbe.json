{"ast":null,"code":"var _jsxFileName = \"/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/EdicaoEncomendas/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { MdCheck, MdKeyboardArrowLeft } from 'react-icons/md';\nimport { Container, EditOrder, FormOrder } from './styles';\nimport HeaderPages from '../../components/HeaderPages';\nimport history from '../../services/history';\nimport IconButton from '../../components/IconButton';\nimport ButtonBack from '../../components/ButtonBack';\nimport SelectAsync from '../../components/SelectAsync';\nimport api from '../../services/api';\nexport default function EdicaoEncomendas({\n  match\n}) {\n  const {\n    id\n  } = match.params;\n  console.tron.log(id);\n  useEffect(() => {\n    async function loadInitialData(deliveryId) {\n      if (id) {\n        const response = await api.get(`/orders/${id}`);\n        formRef.current.setData(response.data);\n        formRef.current.setFieldValue('recipient_id', {\n          value: response.data.recipient.id,\n          label: response.data.recipient.name\n        });\n        formRef.current.setFieldValue('deliveryman_id', {\n          value: response.data.deliveryman.id,\n          label: response.data.deliveryman.name\n        });\n      }\n    }\n\n    loadInitialData(id);\n  }, [id]);\n\n  async function loadRecipients(inputValue, callback) {\n    const response = await api.get('recipient', {\n      params: {\n        q: inputValue\n      }\n    });\n    const data = response.data.map(recipient => ({\n      value: recipient.id,\n      label: recipient.name\n    }));\n    callback(data);\n  }\n\n  async function loadDeliveries(inputValue, callback) {\n    const response = await api.get('deliveries', {\n      params: {\n        q: inputValue\n      }\n    });\n    const data = response.data.map(deliveries => ({\n      value: deliveries.id,\n      label: deliveries.name\n    }));\n    callback(data);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(EditOrder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(HeaderPages, {\n    title: \"Edi\\xE7\\xE3o de Encomendas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(ButtonBack, {\n    Icon: MdKeyboardArrowLeft,\n    title: \"VOLTAR\",\n    type: \"button\",\n    action: history.goBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    Icon: MdCheck,\n    title: \"SALVAR\",\n    type: \"button\",\n    action: () => history.push('/encomendas/'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(FormOrder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(SelectAsync, {\n    type: \"text\",\n    label: \"Destinat\\xE1rio\",\n    name: \"recipient_id\",\n    placeholder: \"Entregadores\",\n    noOptionsMessage: () => 'Nenhum destinatário encontrado',\n    loadOptions: loadRecipients,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(SelectAsync, {\n    type: \"text\",\n    label: \"Entregador\",\n    name: \"delivaryman_id\",\n    placeholder: \"Entregadores\",\n    noOptionsMessage: () => 'Nenhum entregador encontrado',\n    loadOptions: loadDeliveries,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))));\n}\nEdicaoEncomendas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/EdicaoEncomendas/index.js"],"names":["React","PropTypes","MdCheck","MdKeyboardArrowLeft","Container","EditOrder","FormOrder","HeaderPages","history","IconButton","ButtonBack","SelectAsync","api","EdicaoEncomendas","match","id","params","console","tron","log","useEffect","loadInitialData","deliveryId","response","get","formRef","current","setData","data","setFieldValue","value","recipient","label","name","deliveryman","loadRecipients","inputValue","callback","q","map","loadDeliveries","deliveries","goBack","push","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MdCheck, MdKeyboardArrowLeft } from 'react-icons/md';\n\nimport { Container, EditOrder, FormOrder } from './styles';\nimport HeaderPages from '../../components/HeaderPages';\nimport history from '../../services/history';\nimport IconButton from '../../components/IconButton';\nimport ButtonBack from '../../components/ButtonBack';\nimport SelectAsync from '../../components/SelectAsync';\nimport api from '../../services/api';\n\nexport default function EdicaoEncomendas({ match }) {\n  const { id } = match.params;\n  console.tron.log(id);\n\n  useEffect(() => {\n    async function loadInitialData(deliveryId) {\n      if (id) {\n        const response = await api.get(`/orders/${id}`);\n\n        formRef.current.setData(response.data);\n        formRef.current.setFieldValue('recipient_id', {\n          value: response.data.recipient.id,\n          label: response.data.recipient.name,\n        });\n        formRef.current.setFieldValue('deliveryman_id', {\n          value: response.data.deliveryman.id,\n          label: response.data.deliveryman.name,\n        });\n      }\n    }\n    loadInitialData(id);\n  }, [id]);\n\n  async function loadRecipients(inputValue, callback) {\n    const response = await api.get('recipient', {\n      params: {\n        q: inputValue,\n      },\n    });\n\n    const data = response.data.map(recipient => ({\n      value: recipient.id,\n      label: recipient.name,\n    }));\n\n    callback(data);\n  }\n\n  async function loadDeliveries(inputValue, callback) {\n    const response = await api.get('deliveries', {\n      params: {\n        q: inputValue,\n      },\n    });\n\n    const data = response.data.map(deliveries => ({\n      value: deliveries.id,\n      label: deliveries.name,\n    }));\n\n    callback(data);\n  }\n\n  return (\n    <Container>\n      <EditOrder>\n        <HeaderPages title=\"Edição de Encomendas\">\n          <ButtonBack\n            Icon={MdKeyboardArrowLeft}\n            title=\"VOLTAR\"\n            type=\"button\"\n            action={history.goBack}\n          />\n          <IconButton\n            Icon={MdCheck}\n            title=\"SALVAR\"\n            type=\"button\"\n            action={() => history.push('/encomendas/')}\n          />\n        </HeaderPages>\n        <FormOrder>\n          <SelectAsync\n            type=\"text\"\n            label=\"Destinatário\"\n            name=\"recipient_id\"\n            placeholder=\"Entregadores\"\n            noOptionsMessage={() => 'Nenhum destinatário encontrado'}\n            loadOptions={loadRecipients}\n          />\n          <SelectAsync\n            type=\"text\"\n            label=\"Entregador\"\n            name=\"delivaryman_id\"\n            placeholder=\"Entregadores\"\n            noOptionsMessage={() => 'Nenhum entregador encontrado'}\n            loadOptions={loadDeliveries}\n          />\n        </FormOrder>\n      </EditOrder>\n    </Container>\n  );\n}\n\nEdicaoEncomendas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}