{"ast":null,"code":"var _jsxFileName = \"/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/EdicaoEncomendas/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdCheck, MdKeyboardArrowLeft } from 'react-icons/md';\nimport { Form, Input } from '@rocketseat/unform';\nimport Select from 'react-select';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { Container, EditOrder, FormOrder } from './styles';\nimport HeaderPages from '../../components/HeaderPages';\nimport history from '../../services/history';\nimport IconButton from '../../components/IconButton';\nimport ButtonBack from '../../components/ButtonBack';\nimport api from '../../services/api';\nimport * as OrdersActions from '../../store/modules/orders/actions';\nconst schema = Yup.object().shape({\n  product: Yup.string().required('O nome do produto é obrigatório'),\n  recipient_id: Yup.string().required('O destinatário é obrigatório'),\n  delivaryman_id: Yup.string().required('O entregador é obrigatório')\n});\nexport default function EdicaoEncomendas({\n  match\n}) {\n  const dispatch = useDispatch();\n  const {\n    id\n  } = match.params;\n  const [order, setOrders] = useState('');\n  const [recipients, setRecipients] = useState([]);\n  const [deliveries, setDeliveries] = useState([]);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    async function loadOrder() {\n      if (id) {\n        const response = await api.get(`orders/${id}`);\n        const currentRecipient = {\n          value: response.data.recipient.id,\n          label: response.data.recipient.name\n        };\n        const currentDeliveryman = {\n          value: response.data.delivery.id,\n          label: response.data.delivery.name\n        };\n        response.data.currentRecipient = currentRecipient;\n        response.data.currentDeliveryman = currentDeliveryman;\n        setOrders(response.data);\n      }\n    }\n\n    async function loadRecipients() {\n      const response = await api.get('/recipient');\n      const data = response.data.map(recipients => ({\n        value: recipients.id,\n        label: recipients.name\n      }));\n      setRecipients(data);\n    }\n\n    async function loadDeliveries() {\n      const response = await api.get('/deliveries');\n      const dataDelivery = response.data.map(deliveries => ({\n        value: deliveries.id,\n        label: deliveries.name\n      }));\n      setDeliveries(dataDelivery);\n    }\n\n    loadOrder();\n    loadRecipients();\n    loadDeliveries();\n  }, [id]);\n\n  async function handleSubmit(data) {\n    if (!id) {//dispatch(OrdersActions.addRequest(data));\n    } else {\n      console.tron.log('DATA', deliveries);\n      data.id = id;\n      dispatch(OrdersActions.updateRequest(data));\n    }\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(EditOrder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(HeaderPages, {\n    title: \"Edi\\xE7\\xE3o de Encomendas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(ButtonBack, {\n    Icon: MdKeyboardArrowLeft,\n    title: \"VOLTAR\",\n    type: \"button\",\n    action: history.goBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(FormOrder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Form, {\n    initialData: order,\n    schema: schema,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"divSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Destinat\\xE1rio\"), React.createElement(Select, {\n    className: \"rec\",\n    name: \"recipient_id\",\n    placeholder: order ? order.recipient.name : 'Selecione um destinatário... ',\n    defaultValue: order.recipient_id,\n    options: recipients,\n    onChange: e => setRecipients({\n      recipient_id: e.value\n    }, console.tron.log('HELLO', e.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"divSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Entregadores\"), React.createElement(Select, {\n    className: \"del\",\n    name: \"delivaryman_id\",\n    placeholder: order ? order.delivery.name : 'Selecione um entregador... ',\n    defaultValue: order.delivaryman_id,\n    onChange: e => setDeliveries({\n      delivaryman_id: e.value\n    }, console.tron.log('HELLO', e.value)),\n    options: deliveries,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"divInp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Nome do produto\"), React.createElement(Input, {\n    name: \"product\",\n    placeholder: \"Nome do produto\",\n    onChange: e => setProducts({\n      product: e.value\n    }, console.tron.log('HELLO', e.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    Icon: MdCheck,\n    title: \"SALVAR\",\n    type: \"submit\",\n    action: () => handleSubmit(recipients, deliveries, products),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })))));\n}\nEdicaoEncomendas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/EdicaoEncomendas/index.js"],"names":["React","useEffect","useState","PropTypes","MdCheck","MdKeyboardArrowLeft","Form","Input","Select","Yup","useDispatch","Container","EditOrder","FormOrder","HeaderPages","history","IconButton","ButtonBack","api","OrdersActions","schema","object","shape","product","string","required","recipient_id","delivaryman_id","EdicaoEncomendas","match","dispatch","id","params","order","setOrders","recipients","setRecipients","deliveries","setDeliveries","products","setProducts","loadOrder","response","get","currentRecipient","value","data","recipient","label","name","currentDeliveryman","delivery","loadRecipients","map","loadDeliveries","dataDelivery","handleSubmit","console","tron","log","updateRequest","goBack","e","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdCheck, MdKeyboardArrowLeft } from 'react-icons/md';\nimport { Form, Input } from '@rocketseat/unform';\nimport Select from 'react-select';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\n\nimport { Container, EditOrder, FormOrder } from './styles';\nimport HeaderPages from '../../components/HeaderPages';\nimport history from '../../services/history';\nimport IconButton from '../../components/IconButton';\nimport ButtonBack from '../../components/ButtonBack';\nimport api from '../../services/api';\nimport * as OrdersActions from '../../store/modules/orders/actions';\n\nconst schema = Yup.object().shape({\n  product: Yup.string().required('O nome do produto é obrigatório'),\n  recipient_id: Yup.string().required('O destinatário é obrigatório'),\n  delivaryman_id: Yup.string().required('O entregador é obrigatório'),\n});\n\nexport default function EdicaoEncomendas({ match }) {\n  const dispatch = useDispatch();\n\n  const { id } = match.params;\n  const [order, setOrders] = useState('');\n  const [recipients, setRecipients] = useState([]);\n  const [deliveries, setDeliveries] = useState([]);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    async function loadOrder() {\n      if (id) {\n        const response = await api.get(`orders/${id}`);\n\n        const currentRecipient = {\n          value: response.data.recipient.id,\n          label: response.data.recipient.name,\n        };\n\n        const currentDeliveryman = {\n          value: response.data.delivery.id,\n          label: response.data.delivery.name,\n        };\n\n        response.data.currentRecipient = currentRecipient;\n        response.data.currentDeliveryman = currentDeliveryman;\n\n        setOrders(response.data);\n      }\n    }\n\n    async function loadRecipients() {\n      const response = await api.get('/recipient');\n\n      const data = response.data.map(recipients => ({\n        value: recipients.id,\n        label: recipients.name,\n      }));\n\n      setRecipients(data);\n    }\n\n    async function loadDeliveries() {\n      const response = await api.get('/deliveries');\n\n      const dataDelivery = response.data.map(deliveries => ({\n        value: deliveries.id,\n        label: deliveries.name,\n      }));\n\n      setDeliveries(dataDelivery);\n    }\n\n    loadOrder();\n    loadRecipients();\n    loadDeliveries();\n  }, [id]);\n\n  async function handleSubmit(data) {\n    if (!id) {\n      //dispatch(OrdersActions.addRequest(data));\n    } else {\n      console.tron.log('DATA', deliveries);\n\n      data.id = id;\n      dispatch(OrdersActions.updateRequest(data));\n    }\n  }\n\n  return (\n    <Container>\n      <EditOrder>\n        <HeaderPages title=\"Edição de Encomendas\">\n          <ButtonBack\n            Icon={MdKeyboardArrowLeft}\n            title=\"VOLTAR\"\n            type=\"button\"\n            action={history.goBack}\n          />\n        </HeaderPages>\n        <FormOrder>\n          <Form initialData={order} schema={schema} onSubmit={handleSubmit}>\n            <div className=\"divSelect\">\n              <label>Destinatário</label>\n              <Select\n                className=\"rec\"\n                name=\"recipient_id\"\n                placeholder={\n                  order ? order.recipient.name : 'Selecione um destinatário... '\n                }\n                defaultValue={order.recipient_id}\n                options={recipients}\n                onChange={e =>\n                  setRecipients(\n                    { recipient_id: e.value },\n                    console.tron.log('HELLO', e.value)\n                  )\n                }\n              />\n            </div>\n            <div className=\"divSelect\">\n              <label>Entregadores</label>\n              <Select\n                className=\"del\"\n                name=\"delivaryman_id\"\n                placeholder={\n                  order ? order.delivery.name : 'Selecione um entregador... '\n                }\n                defaultValue={order.delivaryman_id}\n                onChange={e =>\n                  setDeliveries(\n                    { delivaryman_id: e.value },\n                    console.tron.log('HELLO', e.value)\n                  )\n                }\n                options={deliveries}\n              />\n            </div>\n            <div className=\"divInp\">\n              <label>Nome do produto</label>\n              <Input\n                name=\"product\"\n                placeholder=\"Nome do produto\"\n                onChange={e =>\n                  setProducts(\n                    { product: e.value },\n                    console.tron.log('HELLO', e.value)\n                  )\n                }\n              />\n            </div>\n            <IconButton\n              Icon={MdCheck}\n              title=\"SALVAR\"\n              type=\"submit\"\n              action={() => handleSubmit(recipients, deliveries, products)}\n            />\n          </Form>\n        </FormOrder>\n      </EditOrder>\n    </Container>\n  );\n}\n\nEdicaoEncomendas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}