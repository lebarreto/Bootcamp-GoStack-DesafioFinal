{"ast":null,"code":"import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { updateSuccess } from './actions';\nimport api from '../../../services/api';\nimport history from '../../../services/history';\nexport function* updateRecipient({\n  payload\n}) {\n  try {\n    const {\n      id,\n      name,\n      street,\n      number,\n      complement,\n      state,\n      city,\n      zip\n    } = payload.recipients;\n    console.tron.log('paylaod', payload.recipients);\n    yield call(api.put, `recipient/${id}`, {\n      name,\n      street,\n      number,\n      complement,\n      state,\n      city,\n      zip\n    });\n    yield put(updateSuccess({\n      name,\n      street,\n      number,\n      complement,\n      state,\n      city,\n      zip\n    }));\n    toast.success('Destinatário atualizado com sucesso!');\n    history.push('/destinatarios');\n  } catch (error) {\n    toast.error('Falha na atualização de destinatário, verifique os campos novamente.');\n  }\n}\nexport default all([takeLatest('@recipient/UPDATE_REQUEST', updateRecipient)]);","map":{"version":3,"sources":["/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/store/modules/recipient/sagas.js"],"names":["all","takeLatest","call","put","toast","updateSuccess","api","history","updateRecipient","payload","id","name","street","number","complement","state","city","zip","recipients","console","tron","log","success","push","error"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAuC;AAC5C,MAAI;AACF,UAAM;AACJC,MAAAA,EADI;AAEJC,MAAAA,IAFI;AAGJC,MAAAA,MAHI;AAIJC,MAAAA,MAJI;AAKJC,MAAAA,UALI;AAMJC,MAAAA,KANI;AAOJC,MAAAA,IAPI;AAQJC,MAAAA;AARI,QASFR,OAAO,CAACS,UATZ;AAWAC,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,SAAjB,EAA4BZ,OAAO,CAACS,UAApC;AACA,UAAMhB,IAAI,CAACI,GAAG,CAACH,GAAL,EAAW,aAAYO,EAAG,EAA1B,EAA6B;AACrCC,MAAAA,IADqC;AAErCC,MAAAA,MAFqC;AAGrCC,MAAAA,MAHqC;AAIrCC,MAAAA,UAJqC;AAKrCC,MAAAA,KALqC;AAMrCC,MAAAA,IANqC;AAOrCC,MAAAA;AAPqC,KAA7B,CAAV;AAUA,UAAMd,GAAG,CACPE,aAAa,CAAC;AAAEM,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA,MAAhB;AAAwBC,MAAAA,UAAxB;AAAoCC,MAAAA,KAApC;AAA2CC,MAAAA,IAA3C;AAAiDC,MAAAA;AAAjD,KAAD,CADN,CAAT;AAIAb,IAAAA,KAAK,CAACkB,OAAN,CAAc,sCAAd;AAEAf,IAAAA,OAAO,CAACgB,IAAR,CAAa,gBAAb;AACD,GA9BD,CA8BE,OAAOC,KAAP,EAAc;AACdpB,IAAAA,KAAK,CAACoB,KAAN,CACE,sEADF;AAGD;AACF;AAED,eAAexB,GAAG,CAAC,CAACC,UAAU,CAAC,2BAAD,EAA8BO,eAA9B,CAAX,CAAD,CAAlB","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport { updateSuccess } from './actions';\nimport api from '../../../services/api';\nimport history from '../../../services/history';\n\nexport function* updateRecipient({ payload }) {\n  try {\n    const {\n      id,\n      name,\n      street,\n      number,\n      complement,\n      state,\n      city,\n      zip,\n    } = payload.recipients;\n\n    console.tron.log('paylaod', payload.recipients);\n    yield call(api.put, `recipient/${id}`, {\n      name,\n      street,\n      number,\n      complement,\n      state,\n      city,\n      zip,\n    });\n\n    yield put(\n      updateSuccess({ name, street, number, complement, state, city, zip })\n    );\n\n    toast.success('Destinatário atualizado com sucesso!');\n\n    history.push('/destinatarios');\n  } catch (error) {\n    toast.error(\n      'Falha na atualização de destinatário, verifique os campos novamente.'\n    );\n  }\n}\n\nexport default all([takeLatest('@recipient/UPDATE_REQUEST', updateRecipient)]);\n"]},"metadata":{},"sourceType":"module"}