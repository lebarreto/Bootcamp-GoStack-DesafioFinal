{"ast":null,"code":"var _jsxFileName = \"/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/Encomendas/CriacaoEncomendas/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdCheck, MdKeyboardArrowLeft } from 'react-icons/md';\nimport { Form, Input } from '@rocketseat/unform';\nimport Select from 'react-select';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { Container, EditOrder, FormOrder } from './styles';\nimport HeaderPages from '../../../components/HeaderPages';\nimport history from '../../../services/history';\nimport IconButton from '../../../components/IconButton';\nimport ButtonBack from '../../../components/ButtonBack';\nimport api from '../../../services/api';\nimport * as OrdersActions from '../../../store/modules/orders/actions';\nconst schema = Yup.object().shape({\n  product: Yup.string().required('O nome do produto é obrigatório'),\n  recipient_id: Yup.string().required('O nome do destinatário é obrigatório'),\n  delivaryman_id: Yup.string().required('O nome do entregador é obrigatório')\n});\nexport default function CriacaoEncomendas() {\n  const dispatch = useDispatch();\n  const [order, setOrders] = useState('');\n  const [recipient, setRecipients] = useState([]);\n  const [delivery, setDeliveries] = useState([]);\n  const [product, setProducts] = useState([]);\n  const [recipient_id, setRecipientId] = useState([]);\n  const [delivaryman_id, setDelivarymanId] = useState([]);\n  useEffect(() => {\n    async function loadRecipients() {\n      const response = await api.get('/recipient');\n      const data = response.data.map(recipient => ({\n        value: recipient.id,\n        label: recipient.name\n      }));\n      setRecipients(data);\n    }\n\n    async function loadDeliveries() {\n      const response = await api.get('/deliveries');\n      const dataDelivery = response.data.map(delivery => ({\n        value: delivery.id,\n        label: delivery.name\n      }));\n      setDeliveries(dataDelivery);\n    }\n\n    loadRecipients();\n    loadDeliveries();\n  }, []);\n\n  async function handleSubmit(data) {\n    dispatch(OrdersActions.addRequest(data));\n  }\n\n  const handleRecipientChange = e => {\n    setRecipientId(e.value);\n  };\n\n  const handleDeliverymanChange = e => {\n    console.tron.log(e.value);\n    setDelivarymanId(e.value);\n  };\n\n  const handleProductChange = e => {\n    product = e.target.value;\n    setProducts(product);\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(EditOrder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Form, {\n    schema: schema,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(HeaderPages, {\n    title: \"Cria\\xE7\\xE3o de Encomendas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(ButtonBack, {\n    Icon: MdKeyboardArrowLeft,\n    title: \"VOLTAR\",\n    type: \"button\",\n    action: history.goBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    Icon: MdCheck,\n    title: \"SALVAR\",\n    type: \"submit\",\n    action: () => handleSubmit(order),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(FormOrder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"divSelect\",\n    id: \"recipient_id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Destinat\\xE1rio\"), React.createElement(Select, {\n    className: \"rec\",\n    name: \"recipient_id\",\n    placeholder: 'Selecione um entregador... ',\n    options: recipient,\n    onChange: handleRecipientChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"divSelect\",\n    id: \"delivaryman_id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Entregadores\"), React.createElement(Select, {\n    className: \"del\",\n    name: \"delivaryman_id\",\n    placeholder: 'Selecione um entregador... ',\n    options: delivery,\n    onChange: handleDeliverymanChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"divInp\",\n    id: \"product\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Nome do produto\"), React.createElement(Input, {\n    name: \"product\",\n    placeholder: \"Nome do produto\",\n    onChange: handleProductChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/Encomendas/CriacaoEncomendas/index.js"],"names":["React","useEffect","useState","PropTypes","MdCheck","MdKeyboardArrowLeft","Form","Input","Select","Yup","useDispatch","Container","EditOrder","FormOrder","HeaderPages","history","IconButton","ButtonBack","api","OrdersActions","schema","object","shape","product","string","required","recipient_id","delivaryman_id","CriacaoEncomendas","dispatch","order","setOrders","recipient","setRecipients","delivery","setDeliveries","setProducts","setRecipientId","setDelivarymanId","loadRecipients","response","get","data","map","value","id","label","name","loadDeliveries","dataDelivery","handleSubmit","addRequest","handleRecipientChange","e","handleDeliverymanChange","console","tron","log","handleProductChange","target","goBack"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,mBAAlB,QAA6C,gBAA7C;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,oBAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,SAA/B,QAAgD,UAAhD;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,uCAA/B;AAEA,MAAMC,MAAM,GAAGX,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,OAAO,EAAEd,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,iCAAtB,CADuB;AAEhCC,EAAAA,YAAY,EAAEjB,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,sCAAtB,CAFkB;AAGhCE,EAAAA,cAAc,EAAElB,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,oCAAtB;AAHgB,CAAnB,CAAf;AAMA,eAAe,SAASG,iBAAT,GAA6B;AAC1C,QAAMC,QAAQ,GAAGnB,WAAW,EAA5B;AAEA,QAAM,CAACoB,KAAD,EAAQC,SAAR,IAAqB7B,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAAC8B,SAAD,EAAYC,aAAZ,IAA6B/B,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACgC,QAAD,EAAWC,aAAX,IAA4BjC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACqB,OAAD,EAAUa,WAAV,IAAyBlC,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACwB,YAAD,EAAeW,cAAf,IAAiCnC,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACyB,cAAD,EAAiBW,gBAAjB,IAAqCpC,QAAQ,CAAC,EAAD,CAAnD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAesC,cAAf,GAAgC;AAC9B,YAAMC,QAAQ,GAAG,MAAMtB,GAAG,CAACuB,GAAJ,CAAQ,YAAR,CAAvB;AAEA,YAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBX,SAAS,KAAK;AAC3CY,QAAAA,KAAK,EAAEZ,SAAS,CAACa,EAD0B;AAE3CC,QAAAA,KAAK,EAAEd,SAAS,CAACe;AAF0B,OAAL,CAA3B,CAAb;AAKAd,MAAAA,aAAa,CAACS,IAAD,CAAb;AACD;;AAED,mBAAeM,cAAf,GAAgC;AAC9B,YAAMR,QAAQ,GAAG,MAAMtB,GAAG,CAACuB,GAAJ,CAAQ,aAAR,CAAvB;AAEA,YAAMQ,YAAY,GAAGT,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBT,QAAQ,KAAK;AAClDU,QAAAA,KAAK,EAAEV,QAAQ,CAACW,EADkC;AAElDC,QAAAA,KAAK,EAAEZ,QAAQ,CAACa;AAFkC,OAAL,CAA1B,CAArB;AAKAZ,MAAAA,aAAa,CAACc,YAAD,CAAb;AACD;;AAEDV,IAAAA,cAAc;AACdS,IAAAA,cAAc;AACf,GAzBQ,EAyBN,EAzBM,CAAT;;AA2BA,iBAAeE,YAAf,CAA4BR,IAA5B,EAAkC;AAChCb,IAAAA,QAAQ,CAACV,aAAa,CAACgC,UAAd,CAAyBT,IAAzB,CAAD,CAAR;AACD;;AAED,QAAMU,qBAAqB,GAAGC,CAAC,IAAI;AACjChB,IAAAA,cAAc,CAACgB,CAAC,CAACT,KAAH,CAAd;AACD,GAFD;;AAIA,QAAMU,uBAAuB,GAAGD,CAAC,IAAI;AACnCE,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBJ,CAAC,CAACT,KAAnB;AACAN,IAAAA,gBAAgB,CAACe,CAAC,CAACT,KAAH,CAAhB;AACD,GAHD;;AAKA,QAAMc,mBAAmB,GAAGL,CAAC,IAAI;AAC/B9B,IAAAA,OAAO,GAAG8B,CAAC,CAACM,MAAF,CAASf,KAAnB;AACAR,IAAAA,WAAW,CAACb,OAAD,CAAX;AACD,GAHD;;AAKA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEH,MAAd;AAAsB,IAAA,QAAQ,EAAE8B,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,6BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAE7C,mBADR;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,MAAM,EAAEU,OAAO,CAAC6C,MAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAExD,OADR;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,MAAM,EAAE,MAAM8C,YAAY,CAACpB,KAAD,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAeE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,EAAE,EAAC,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,WAAW,EAAE,6BAHf;AAIE,IAAA,OAAO,EAAEE,SAJX;AAKE,IAAA,QAAQ,EAAEoB,qBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAWE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,EAAE,EAAC,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,IAAI,EAAC,gBAFP;AAGE,IAAA,WAAW,EAAE,6BAHf;AAIE,IAAA,OAAO,EAAElB,QAJX;AAKE,IAAA,QAAQ,EAAEoB,uBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,EAqBE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,EAAE,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,QAAQ,EAAEI,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CArBF,CAfF,CADF,CADF,CADF;AAoDD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdCheck, MdKeyboardArrowLeft } from 'react-icons/md';\nimport { Form, Input } from '@rocketseat/unform';\nimport Select from 'react-select';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\n\nimport { Container, EditOrder, FormOrder } from './styles';\nimport HeaderPages from '../../../components/HeaderPages';\nimport history from '../../../services/history';\nimport IconButton from '../../../components/IconButton';\nimport ButtonBack from '../../../components/ButtonBack';\nimport api from '../../../services/api';\nimport * as OrdersActions from '../../../store/modules/orders/actions';\n\nconst schema = Yup.object().shape({\n  product: Yup.string().required('O nome do produto é obrigatório'),\n  recipient_id: Yup.string().required('O nome do destinatário é obrigatório'),\n  delivaryman_id: Yup.string().required('O nome do entregador é obrigatório'),\n});\n\nexport default function CriacaoEncomendas() {\n  const dispatch = useDispatch();\n\n  const [order, setOrders] = useState('');\n  const [recipient, setRecipients] = useState([]);\n  const [delivery, setDeliveries] = useState([]);\n  const [product, setProducts] = useState([]);\n  const [recipient_id, setRecipientId] = useState([]);\n  const [delivaryman_id, setDelivarymanId] = useState([]);\n\n  useEffect(() => {\n    async function loadRecipients() {\n      const response = await api.get('/recipient');\n\n      const data = response.data.map(recipient => ({\n        value: recipient.id,\n        label: recipient.name,\n      }));\n\n      setRecipients(data);\n    }\n\n    async function loadDeliveries() {\n      const response = await api.get('/deliveries');\n\n      const dataDelivery = response.data.map(delivery => ({\n        value: delivery.id,\n        label: delivery.name,\n      }));\n\n      setDeliveries(dataDelivery);\n    }\n\n    loadRecipients();\n    loadDeliveries();\n  }, []);\n\n  async function handleSubmit(data) {\n    dispatch(OrdersActions.addRequest(data));\n  }\n\n  const handleRecipientChange = e => {\n    setRecipientId(e.value);\n  };\n\n  const handleDeliverymanChange = e => {\n    console.tron.log(e.value);\n    setDelivarymanId(e.value);\n  };\n\n  const handleProductChange = e => {\n    product = e.target.value;\n    setProducts(product);\n  };\n\n  return (\n    <Container>\n      <EditOrder>\n        <Form schema={schema} onSubmit={handleSubmit}>\n          <HeaderPages title=\"Criação de Encomendas\">\n            <ButtonBack\n              Icon={MdKeyboardArrowLeft}\n              title=\"VOLTAR\"\n              type=\"button\"\n              action={history.goBack}\n            />\n            <IconButton\n              Icon={MdCheck}\n              title=\"SALVAR\"\n              type=\"submit\"\n              action={() => handleSubmit(order)}\n            />\n          </HeaderPages>\n          <FormOrder>\n            <div className=\"divSelect\" id=\"recipient_id\">\n              <label>Destinatário</label>\n              <Select\n                className=\"rec\"\n                name=\"recipient_id\"\n                placeholder={'Selecione um entregador... '}\n                options={recipient}\n                onChange={handleRecipientChange}\n              />\n            </div>\n            <div className=\"divSelect\" id=\"delivaryman_id\">\n              <label>Entregadores</label>\n              <Select\n                className=\"del\"\n                name=\"delivaryman_id\"\n                placeholder={'Selecione um entregador... '}\n                options={delivery}\n                onChange={handleDeliverymanChange}\n              />\n            </div>\n            <div className=\"divInp\" id=\"product\">\n              <label>Nome do produto</label>\n              <Input\n                name=\"product\"\n                placeholder=\"Nome do produto\"\n                onChange={handleProductChange}\n              />\n            </div>\n          </FormOrder>\n        </Form>\n      </EditOrder>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}