{"ast":null,"code":"var _jsxFileName = \"/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/Destinat\\xE1rios/index.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport IconButton from '../../components/IconButton';\nimport AsyncSelect from '../../components/AsyncSelect';\nimport HeaderPage from '../../components/HeaderPages';\nimport api from '../../services/api';\nimport history from '../../services/history';\nimport { Container, Content, UnForm } from './styles';\nexport default function Destinatários({\n  match\n}) {\n  const {\n    id\n  } = match.params;\n  const formRef = useRef(null);\n  useEffect(() => {\n    async function loadInitialData(deliveryId) {\n      if (id) {\n        const response = await api.get(`/orders/${deliveryId}`);\n        formRef.current.setData(response.data);\n        formRef.current.setFieldValue('recipient_id', {\n          value: response.data.recipient.id,\n          label: response.data.recipient.name\n        });\n        formRef.current.setFieldValue('delivaryman_id', {\n          value: response.data.delivery.id,\n          label: response.data.delivery.name\n        });\n      }\n    }\n\n    loadInitialData(id);\n  }, [id]);\n  const customStylesSelectInput = {\n    control: provided => ({ ...provided,\n      height: 45\n    })\n  };\n\n  async function loadRecipientOptions(inputValue, callback) {\n    const response = await api.get('/recipients', {\n      params: {\n        q: inputValue\n      }\n    });\n    const data = response.data.map(recipient => ({\n      value: recipient.id,\n      label: recipient.name\n    }));\n    callback(data);\n  }\n\n  async function loadDeliverymenOptrios(inputValue, callback) {\n    const response = await api.get('/deliveries', {\n      params: {\n        q: inputValue\n      }\n    });\n    const data = response.data.map(deliveryman => ({\n      value: deliveryman.id,\n      label: deliveryman.name\n    }));\n    callback(data);\n  }\n\n  async function handleSubmit(data, {\n    reset\n  }) {\n    formRef.current.setErrors({});\n\n    try {\n      const schema = Yup.object().shape({\n        product: Yup.string().required('O nome do produto é obrigatório'),\n        recipient_id: Yup.string().required('O destinatário é obrigatório'),\n        delivaryman_id: Yup.string().required('O entregador é obrigatório')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n\n      if (id) {\n        await api.put(`/orders/${id}`, {\n          product: data.product,\n          recipient_id: data.recipient_id,\n          delivaryman_id: data.delivery.id\n        });\n        history.push('/encomendas');\n        toast.success('Encomenda editada com sucesso!');\n      } else {\n        await api.post('/orders', {\n          product: data.product,\n          recipient_id: data.recipient_id,\n          delivaryman_id: data.delivery.id\n        });\n        toast.success('Encomenda criada com sucesso!');\n      }\n\n      reset();\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const errorMessages = {};\n        err.inner.forEach(error => {\n          errorMessages[error.path] = error.message;\n        });\n        formRef.current.setErrors(errorMessages);\n      }\n    }\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(HeaderPage, {\n    title: \"Cadastro de encomendas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    action: () => formRef.current.submitForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(UnForm, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(AsyncSelect, {\n    type: \"text\",\n    label: \"Destinat\\xE1rio\",\n    name: \"recipient_id\",\n    placeholder: \"Destinat\\xE1rios\",\n    noOptionsMessage: () => 'Nenhum destinatário encontrado',\n    loadOptions: loadRecipientOptions,\n    styles: customStylesSelectInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(AsyncSelect, {\n    type: \"text\",\n    label: \"Entregador\",\n    name: \"delivaryman_id\",\n    placeholder: \"Entregadores\",\n    noOptionsMessage: () => 'Nenhum entregador encontrado',\n    loadOptions: loadDeliverymenOptrios,\n    styles: customStylesSelectInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })))));\n}\nDestinatários.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/Destinatários/index.js"],"names":["React","useEffect","useRef","toast","PropTypes","Yup","IconButton","AsyncSelect","HeaderPage","api","history","Container","Content","UnForm","Destinatários","match","id","params","formRef","loadInitialData","deliveryId","response","get","current","setData","data","setFieldValue","value","recipient","label","name","delivery","customStylesSelectInput","control","provided","height","loadRecipientOptions","inputValue","callback","q","map","loadDeliverymenOptrios","deliveryman","handleSubmit","reset","setErrors","schema","object","shape","product","string","required","recipient_id","delivaryman_id","validate","abortEarly","put","push","success","post","err","ValidationError","errorMessages","inner","forEach","error","path","message","submitForm","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { toast } from 'react-toastify';\n\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\n\nimport IconButton from '../../components/IconButton';\nimport AsyncSelect from '../../components/AsyncSelect';\nimport HeaderPage from '../../components/HeaderPages';\nimport api from '../../services/api';\nimport history from '../../services/history';\n\nimport { Container, Content, UnForm } from './styles';\n\nexport default function Destinatários({ match }) {\n  const { id } = match.params;\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    async function loadInitialData(deliveryId) {\n      if (id) {\n        const response = await api.get(`/orders/${deliveryId}`);\n\n        formRef.current.setData(response.data);\n        formRef.current.setFieldValue('recipient_id', {\n          value: response.data.recipient.id,\n          label: response.data.recipient.name,\n        });\n        formRef.current.setFieldValue('delivaryman_id', {\n          value: response.data.delivery.id,\n          label: response.data.delivery.name,\n        });\n      }\n    }\n    loadInitialData(id);\n  }, [id]);\n\n  const customStylesSelectInput = {\n    control: provided => ({\n      ...provided,\n      height: 45,\n    }),\n  };\n\n  async function loadRecipientOptions(inputValue, callback) {\n    const response = await api.get('/recipients', {\n      params: {\n        q: inputValue,\n      },\n    });\n\n    const data = response.data.map(recipient => ({\n      value: recipient.id,\n      label: recipient.name,\n    }));\n\n    callback(data);\n  }\n\n  async function loadDeliverymenOptrios(inputValue, callback) {\n    const response = await api.get('/deliveries', {\n      params: {\n        q: inputValue,\n      },\n    });\n\n    const data = response.data.map(deliveryman => ({\n      value: deliveryman.id,\n      label: deliveryman.name,\n    }));\n\n    callback(data);\n  }\n\n  async function handleSubmit(data, { reset }) {\n    formRef.current.setErrors({});\n    try {\n      const schema = Yup.object().shape({\n        product: Yup.string().required('O nome do produto é obrigatório'),\n        recipient_id: Yup.string().required('O destinatário é obrigatório'),\n        delivaryman_id: Yup.string().required('O entregador é obrigatório'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n\n      if (id) {\n        await api.put(`/orders/${id}`, {\n          product: data.product,\n          recipient_id: data.recipient_id,\n          delivaryman_id: data.delivery.id,\n        });\n        history.push('/encomendas');\n        toast.success('Encomenda editada com sucesso!');\n      } else {\n        await api.post('/orders', {\n          product: data.product,\n          recipient_id: data.recipient_id,\n          delivaryman_id: data.delivery.id,\n        });\n        toast.success('Encomenda criada com sucesso!');\n      }\n\n      reset();\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const errorMessages = {};\n\n        err.inner.forEach(error => {\n          errorMessages[error.path] = error.message;\n        });\n\n        formRef.current.setErrors(errorMessages);\n      }\n    }\n  }\n\n  return (\n    <Container>\n      <Content>\n        <HeaderPage title=\"Cadastro de encomendas\">\n          <IconButton action={() => formRef.current.submitForm()} />\n        </HeaderPage>\n\n        <UnForm ref={formRef} onSubmit={handleSubmit}>\n          <section>\n            <AsyncSelect\n              type=\"text\"\n              label=\"Destinatário\"\n              name=\"recipient_id\"\n              placeholder=\"Destinatários\"\n              noOptionsMessage={() => 'Nenhum destinatário encontrado'}\n              loadOptions={loadRecipientOptions}\n              styles={customStylesSelectInput}\n            />\n            <AsyncSelect\n              type=\"text\"\n              label=\"Entregador\"\n              name=\"delivaryman_id\"\n              placeholder=\"Entregadores\"\n              noOptionsMessage={() => 'Nenhum entregador encontrado'}\n              loadOptions={loadDeliverymenOptrios}\n              styles={customStylesSelectInput}\n            />\n          </section>\n        </UnForm>\n      </Content>\n    </Container>\n  );\n}\n\nDestinatários.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}