{"ast":null,"code":"import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport { updateSuccess } from './actions';\nimport api from '../../../services/api';\nimport history from '../../../services/history';\nexport function* update({\n  payload\n}) {\n  try {\n    const {\n      id,\n      recipientId,\n      delivarymanId,\n      product\n    } = payload;\n    const updated = {\n      id,\n      recipientId,\n      delivarymanId,\n      product\n    };\n    const recipient_id = updated.recipientId.value;\n    const delivaryman_id = updated.delivarymanId.value;\n    const order = {\n      id,\n      recipient_id,\n      delivaryman_id,\n      product\n    };\n    console.tron.log('OII', recipient_id);\n    console.tron.log(updated);\n    const response = yield call(api.put, `orders/${id}`, {\n      order\n    });\n    console.tron.log('OII2', response.data);\n    yield put(updateSuccess(response.data));\n    toast.success('Encomenda atualizada com sucesso!');\n    history.push('/encomendas');\n  } catch (error) {\n    toast.error('Falha na atualização da encomenda, verifique os campos novamente.');\n  }\n}\nexport default all([takeLatest('@order/UPDATE_REQUEST', update)]);","map":{"version":3,"sources":["/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/store/modules/orders/sagas.js"],"names":["all","takeLatest","call","put","toast","updateSuccess","api","history","update","payload","id","recipientId","delivarymanId","product","updated","recipient_id","value","delivaryman_id","order","console","tron","log","response","data","success","push","error"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAO,UAAUC,MAAV,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AACnC,MAAI;AACF,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,WAAN;AAAmBC,MAAAA,aAAnB;AAAkCC,MAAAA;AAAlC,QAA8CJ,OAApD;AAEA,UAAMK,OAAO,GAAG;AAAEJ,MAAAA,EAAF;AAAMC,MAAAA,WAAN;AAAmBC,MAAAA,aAAnB;AAAkCC,MAAAA;AAAlC,KAAhB;AAEA,UAAME,YAAY,GAAGD,OAAO,CAACH,WAAR,CAAoBK,KAAzC;AACA,UAAMC,cAAc,GAAGH,OAAO,CAACF,aAAR,CAAsBI,KAA7C;AAEA,UAAME,KAAK,GAAG;AAAER,MAAAA,EAAF;AAAMK,MAAAA,YAAN;AAAoBE,MAAAA,cAApB;AAAoCJ,MAAAA;AAApC,KAAd;AAEAM,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,KAAjB,EAAwBN,YAAxB;AACAI,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiBP,OAAjB;AAEA,UAAMQ,QAAQ,GAAG,MAAMpB,IAAI,CAACI,GAAG,CAACH,GAAL,EAAW,UAASO,EAAG,EAAvB,EAA0B;AACnDQ,MAAAA;AADmD,KAA1B,CAA3B;AAIAC,IAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,MAAjB,EAAyBC,QAAQ,CAACC,IAAlC;AAEA,UAAMpB,GAAG,CAACE,aAAa,CAACiB,QAAQ,CAACC,IAAV,CAAd,CAAT;AACAnB,IAAAA,KAAK,CAACoB,OAAN,CAAc,mCAAd;AAEAjB,IAAAA,OAAO,CAACkB,IAAR,CAAa,aAAb;AACD,GAvBD,CAuBE,OAAOC,KAAP,EAAc;AACdtB,IAAAA,KAAK,CAACsB,KAAN,CACE,mEADF;AAGD;AACF;AAED,eAAe1B,GAAG,CAAC,CAACC,UAAU,CAAC,uBAAD,EAA0BO,MAA1B,CAAX,CAAD,CAAlB","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport { updateSuccess } from './actions';\nimport api from '../../../services/api';\nimport history from '../../../services/history';\n\nexport function* update({ payload }) {\n  try {\n    const { id, recipientId, delivarymanId, product } = payload;\n\n    const updated = { id, recipientId, delivarymanId, product };\n\n    const recipient_id = updated.recipientId.value;\n    const delivaryman_id = updated.delivarymanId.value;\n\n    const order = { id, recipient_id, delivaryman_id, product };\n\n    console.tron.log('OII', recipient_id);\n    console.tron.log(updated);\n\n    const response = yield call(api.put, `orders/${id}`, {\n      order,\n    });\n\n    console.tron.log('OII2', response.data);\n\n    yield put(updateSuccess(response.data));\n    toast.success('Encomenda atualizada com sucesso!');\n\n    history.push('/encomendas');\n  } catch (error) {\n    toast.error(\n      'Falha na atualização da encomenda, verifique os campos novamente.'\n    );\n  }\n}\n\nexport default all([takeLatest('@order/UPDATE_REQUEST', update)]);\n"]},"metadata":{},"sourceType":"module"}