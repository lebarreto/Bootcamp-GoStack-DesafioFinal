{"ast":null,"code":"var _jsxFileName = \"/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/EdicaoEncomendas/index.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdCheck, MdKeyboardArrowLeft } from 'react-icons/md';\nimport { Form, Input, Select } from '@rocketseat/unform';\nimport { useDispatch } from 'react-redux';\nimport { Container, EditOrder, FormOrder } from './styles';\nimport HeaderPages from '../../components/HeaderPages';\nimport history from '../../services/history';\nimport IconButton from '../../components/IconButton';\nimport ButtonBack from '../../components/ButtonBack';\nimport SelectAsync from '../../components/SelectAsync';\nimport api from '../../services/api';\nexport default function EdicaoEncomendas({\n  match\n}) {\n  const {\n    id\n  } = match.params;\n  const [order, setOrders] = useState('');\n  const [recipients, setRecipients] = useState([]);\n  const [deliveries, setDeliveries] = useState([]);\n  const dispatch = useDispatch();\n\n  async function loadRecipients() {\n    const response = await api.get('/recipient');\n    const data = response.data.map(recipients => ({\n      value: recipients.id,\n      label: recipients.name\n    }));\n    setRecipients(data);\n  }\n\n  async function loadDeliveries() {\n    const response = await api.get('/deliveries');\n    const dataDelivery = response.data.map(deliveries => ({\n      value: deliveries.id,\n      label: deliveries.name\n    }));\n    setDeliveries(dataDelivery);\n    console.tron.log(deliveries);\n  }\n\n  useEffect(() => {\n    async function loadOrder() {\n      if (id) {\n        const response = await api.get(`orders/${id}`);\n        const currentRecipient = {\n          value: response.data.recipient.id,\n          label: response.data.recipient.name\n        };\n        const currentDeliveryman = {\n          value: response.data.delivery.id,\n          label: response.data.delivery.name\n        };\n        response.data.currentRecipient = currentRecipient;\n        response.data.currentDeliveryman = currentDeliveryman;\n        setOrders(response.data);\n      }\n    }\n\n    loadOrder();\n    loadRecipients();\n    loadDeliveries();\n  }, [id]);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(EditOrder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(HeaderPages, {\n    title: \"Edi\\xE7\\xE3o de Encomendas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(ButtonBack, {\n    Icon: MdKeyboardArrowLeft,\n    title: \"VOLTAR\",\n    type: \"button\",\n    action: history.goBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    Icon: MdCheck,\n    title: \"SALVAR\",\n    type: \"button\",\n    action: () => history.push('/encomendas/'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(FormOrder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Form, {\n    initialData: order,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Entregadores\"), React.createElement(Select, {\n    name: \"deliveryman_id\",\n    placeholder: order ? order.delivery.name : 'Selecione uma opção... ',\n    defaultValue: order.deliveryman_id,\n    options: loadDeliveries,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })))));\n}\nEdicaoEncomendas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/EdicaoEncomendas/index.js"],"names":["React","useEffect","useRef","useState","PropTypes","MdCheck","MdKeyboardArrowLeft","Form","Input","Select","useDispatch","Container","EditOrder","FormOrder","HeaderPages","history","IconButton","ButtonBack","SelectAsync","api","EdicaoEncomendas","match","id","params","order","setOrders","recipients","setRecipients","deliveries","setDeliveries","dispatch","loadRecipients","response","get","data","map","value","label","name","loadDeliveries","dataDelivery","console","tron","log","loadOrder","currentRecipient","recipient","currentDeliveryman","delivery","goBack","push","deliveryman_id","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdCheck, MdKeyboardArrowLeft } from 'react-icons/md';\nimport { Form, Input, Select } from '@rocketseat/unform';\nimport { useDispatch } from 'react-redux';\n\nimport { Container, EditOrder, FormOrder } from './styles';\nimport HeaderPages from '../../components/HeaderPages';\nimport history from '../../services/history';\nimport IconButton from '../../components/IconButton';\nimport ButtonBack from '../../components/ButtonBack';\nimport SelectAsync from '../../components/SelectAsync';\nimport api from '../../services/api';\n\nexport default function EdicaoEncomendas({ match }) {\n  const { id } = match.params;\n  const [order, setOrders] = useState('');\n  const [recipients, setRecipients] = useState([]);\n  const [deliveries, setDeliveries] = useState([]);\n\n  const dispatch = useDispatch();\n\n  async function loadRecipients() {\n    const response = await api.get('/recipient');\n\n    const data = response.data.map(recipients => ({\n      value: recipients.id,\n      label: recipients.name,\n    }));\n\n    setRecipients(data);\n  }\n\n  async function loadDeliveries() {\n    const response = await api.get('/deliveries');\n\n    const dataDelivery = response.data.map(deliveries => ({\n      value: deliveries.id,\n      label: deliveries.name,\n    }));\n\n    setDeliveries(dataDelivery);\n    console.tron.log(deliveries);\n  }\n\n  useEffect(() => {\n    async function loadOrder() {\n      if (id) {\n        const response = await api.get(`orders/${id}`);\n\n        const currentRecipient = {\n          value: response.data.recipient.id,\n          label: response.data.recipient.name,\n        };\n\n        const currentDeliveryman = {\n          value: response.data.delivery.id,\n          label: response.data.delivery.name,\n        };\n\n        response.data.currentRecipient = currentRecipient;\n        response.data.currentDeliveryman = currentDeliveryman;\n\n        setOrders(response.data);\n      }\n    }\n\n    loadOrder();\n    loadRecipients();\n    loadDeliveries();\n  }, [id]);\n\n  return (\n    <Container>\n      <EditOrder>\n        <HeaderPages title=\"Edição de Encomendas\">\n          <ButtonBack\n            Icon={MdKeyboardArrowLeft}\n            title=\"VOLTAR\"\n            type=\"button\"\n            action={history.goBack}\n          />\n          <IconButton\n            Icon={MdCheck}\n            title=\"SALVAR\"\n            type=\"button\"\n            action={() => history.push('/encomendas/')}\n          />\n        </HeaderPages>\n        <FormOrder>\n          <Form initialData={order}>\n            <label>Entregadores</label>\n            <Select\n              name=\"deliveryman_id\"\n              placeholder={\n                order ? order.delivery.name : 'Selecione uma opção... '\n              }\n              defaultValue={order.deliveryman_id}\n              options={loadDeliveries}\n            />\n          </Form>\n        </FormOrder>\n      </EditOrder>\n    </Container>\n  );\n}\n\nEdicaoEncomendas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}