{"ast":null,"code":"var _jsxFileName = \"/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/EdicaoEncomendas/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Form, Input, Select } from '@rocketseat/unform';\nimport { MdDone, MdKeyboardArrowLeft } from 'react-icons/md';\nimport * as Yup from 'yup';\nimport * as DeliveriesActions from '../../store/modules/orders/actions';\nimport api from '../../services/api';\nimport { Container, Content } from './styles';\nconst schema = Yup.object().shape({\n  product: Yup.string().required('O nome do produto é obrigatório'),\n  recipient_id: Yup.string().required('O destinatário é obrigatório'),\n  delivaryman_id: Yup.string().required('O entregador é obrigatório')\n});\nexport default function EdicaoEncomendas({\n  match\n}) {\n  const {\n    id\n  } = match.params;\n  const [delivery, setDelivery] = useState('');\n  const [deliverymen, setDeliverymen] = useState([]);\n  const [recipients, setRecipients] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    async function loadDeliveryman() {\n      const res = await api.get('/deliveries', {\n        params: {\n          all: true\n        }\n      });\n      const deliveryman = res.data.map(d => ({\n        id: d.id,\n        title: d.name\n      }));\n      setDeliverymen(deliveryman);\n    }\n\n    async function loadRecipients() {\n      const res = await api.get('/recipient', {\n        params: {\n          all: true\n        }\n      });\n      const recipient = res.data.map(r => ({\n        id: r.id,\n        title: r.name\n      }));\n      setRecipients(recipient);\n    }\n\n    async function loadDelivery() {\n      if (id) {\n        const res = await api.get(`/orders/${id}`);\n        const deliverymanDefault = {\n          id: res.data.delivery.id,\n          title: res.data.delivery.name\n        };\n        const recipientDefault = {\n          id: res.data.recipient.id,\n          title: res.data.recipient.name\n        };\n        res.data.deliverymanDefault = deliverymanDefault;\n        res.data.recipientDefault = recipientDefault;\n        setDelivery(res.data);\n      }\n    }\n\n    loadDeliveryman();\n    loadRecipients();\n    loadDelivery();\n  }, [id]);\n  console.tron.log(delivery.recipientDefault);\n  console.tron.log(delivery.deliverymanDefault);\n\n  async function handleSubmit(data) {\n    if (!id) {\n      console.log('oi'); //dispatch(DeliveriesActions.addRequest(data));\n    } else {\n      data.id = id;\n      dispatch(DeliveriesActions.updateRequest(data));\n    }\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Form, {\n    initialData: delivery,\n    onSubmit: handleSubmit,\n    schema: schema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"first-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, delivery ? 'Edição ' : 'Cadastro ', \" de encomendas\"), React.createElement(\"ul\", {\n    id: \"nav-buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/encomendas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    id: \"back\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(MdKeyboardArrowLeft, {\n    size: 30,\n    color: \"#000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), \" Voltar\"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(MdDone, {\n    size: 30,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), delivery ? 'Salvar ' : 'Cadastrar ')))), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Entregadores\"), React.createElement(Select, {\n    name: \"delivaryman_id\",\n    placeholder: delivery ? delivery.delivery.name : 'Selecione uma opção... ',\n    defaultValue: delivery.delivaryman_id,\n    options: deliverymen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Destinat\\xE1rios\"), React.createElement(Select, {\n    name: \"recipient_id\",\n    placeholder: delivery ? delivery.recipient.name : 'Selecione uma opção... ',\n    defaultValue: delivery.recipient_id,\n    options: recipients,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Nome do produto\"), React.createElement(Input, {\n    name: \"product\",\n    placeholder: \"Xiaomi redmi note 8 pro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))));\n}\nEdicaoEncomendas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/leticiabarreto/Documents/RocketSeat/GoStackAulas/Bootcamp-GoStack-DesafioFinal/fastfeetweb/src/pages/EdicaoEncomendas/index.js"],"names":["React","useState","useEffect","PropTypes","useDispatch","Link","Form","Input","Select","MdDone","MdKeyboardArrowLeft","Yup","DeliveriesActions","api","Container","Content","schema","object","shape","product","string","required","recipient_id","delivaryman_id","EdicaoEncomendas","match","id","params","delivery","setDelivery","deliverymen","setDeliverymen","recipients","setRecipients","dispatch","loadDeliveryman","res","get","all","deliveryman","data","map","d","title","name","loadRecipients","recipient","r","loadDelivery","deliverymanDefault","recipientDefault","console","tron","log","handleSubmit","updateRequest","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Form, Input, Select } from '@rocketseat/unform';\nimport { MdDone, MdKeyboardArrowLeft } from 'react-icons/md';\nimport * as Yup from 'yup';\n\nimport * as DeliveriesActions from '../../store/modules/orders/actions';\n\nimport api from '../../services/api';\n\nimport { Container, Content } from './styles';\n\nconst schema = Yup.object().shape({\n  product: Yup.string().required('O nome do produto é obrigatório'),\n  recipient_id: Yup.string().required('O destinatário é obrigatório'),\n  delivaryman_id: Yup.string().required('O entregador é obrigatório'),\n});\n\nexport default function EdicaoEncomendas({ match }) {\n  const { id } = match.params;\n\n  const [delivery, setDelivery] = useState('');\n  const [deliverymen, setDeliverymen] = useState([]);\n  const [recipients, setRecipients] = useState([]);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    async function loadDeliveryman() {\n      const res = await api.get('/deliveries', { params: { all: true } });\n\n      const deliveryman = res.data.map(d => ({\n        id: d.id,\n        title: d.name,\n      }));\n\n      setDeliverymen(deliveryman);\n    }\n\n    async function loadRecipients() {\n      const res = await api.get('/recipient', { params: { all: true } });\n\n      const recipient = res.data.map(r => ({\n        id: r.id,\n        title: r.name,\n      }));\n\n      setRecipients(recipient);\n    }\n\n    async function loadDelivery() {\n      if (id) {\n        const res = await api.get(`/orders/${id}`);\n\n        const deliverymanDefault = {\n          id: res.data.delivery.id,\n          title: res.data.delivery.name,\n        };\n\n        const recipientDefault = {\n          id: res.data.recipient.id,\n          title: res.data.recipient.name,\n        };\n\n        res.data.deliverymanDefault = deliverymanDefault;\n        res.data.recipientDefault = recipientDefault;\n\n        setDelivery(res.data);\n      }\n    }\n\n    loadDeliveryman();\n    loadRecipients();\n    loadDelivery();\n  }, [id]);\n\n  console.tron.log(delivery.recipientDefault);\n  console.tron.log(delivery.deliverymanDefault);\n\n  async function handleSubmit(data) {\n    if (!id) {\n      console.log('oi');\n      //dispatch(DeliveriesActions.addRequest(data));\n    } else {\n      data.id = id;\n      dispatch(DeliveriesActions.updateRequest(data));\n    }\n  }\n\n  return (\n    <Container>\n      <Content>\n        <Form initialData={delivery} onSubmit={handleSubmit} schema={schema}>\n          <div id=\"first-row\">\n            <h2>{delivery ? 'Edição ' : 'Cadastro '} de encomendas</h2>\n\n            <ul id=\"nav-buttons\">\n              <li>\n                <Link to=\"/encomendas\">\n                  <button type=\"button\" id=\"back\">\n                    <MdKeyboardArrowLeft size={30} color=\"#000\" /> Voltar\n                  </button>\n                </Link>\n              </li>\n\n              <li>\n                <button type=\"submit\">\n                  <MdDone size={30} color=\"#fff\" />\n                  {delivery ? 'Salvar ' : 'Cadastrar '}\n                </button>\n              </li>\n            </ul>\n          </div>\n\n          <strong>Entregadores</strong>\n          <Select\n            name=\"delivaryman_id\"\n            placeholder={\n              delivery ? delivery.delivery.name : 'Selecione uma opção... '\n            }\n            defaultValue={delivery.delivaryman_id}\n            options={deliverymen}\n          />\n\n          <strong>Destinatários</strong>\n          <Select\n            name=\"recipient_id\"\n            placeholder={\n              delivery ? delivery.recipient.name : 'Selecione uma opção... '\n            }\n            defaultValue={delivery.recipient_id}\n            options={recipients}\n          />\n\n          <strong>Nome do produto</strong>\n          <Input name=\"product\" placeholder=\"Xiaomi redmi note 8 pro\" />\n        </Form>\n      </Content>\n    </Container>\n  );\n}\n\nEdicaoEncomendas.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}